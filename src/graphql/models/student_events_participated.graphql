type Query {
    studentEventsParticipated(data: studentEventsParticipatedQueryInput!): [StudentEventParticipated!]!
    studentEventParticipated(data: studentEventParticipatedQueryInput!): StudentEventParticipated!
}

type Mutation {
    createEventParticipated(data: createEventParticipatedInput!): StudentEventParticipated!
    updateEventParticipated(data: updateEventParticipatedInput!): StudentEventParticipated!
    deleteEventParticipated(data: deleteEventParticipatedInput!): StudentEventParticipated!
}

input studentEventsParticipatedQueryInput{
    Register_No: Int!
}

input studentEventParticipatedQueryInput{
    Event_ID: Int!
}

type StudentEventParticipated {
    Event_ID: Int!
    Register_No: Int!
    Event_Name: String
    Event_Type_Ref: Int
    Participation_Type_Ref: Int
    Team_Size: Int
    Event_Organizer: String
    Event_Date: String
    Prize_Won_Details: String
    Certificate_Copy: String
}

input createEventParticipatedInput{
    Event_Name: String
    Event_Type_Ref: Int
    Participation_Type_Ref: Int
    Team_Size: Int
    Event_Organizer: String
    Event_Date: String
    Prize_Won_Details: String
    Certificate_Copy: String 
}

input updateEventParticipatedInput{
    Event_ID: Int!
    Event_Name: String
    Event_Type_Ref: Int
    Participation_Type_Ref: Int
    Team_Size: Int
    Event_Organizer: String
    Event_Date: String
    Prize_Won_Details: String
    Certificate_Copy: String 
}

input deleteEventParticipatedInput{
    Event_ID: Int!
}