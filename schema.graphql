type Query {
  session_assessments(data: sessionQueryInput!): [Int]
  assessment(data: assesmentQueryInput!): [course_assessment]
  assess_evaluation(data: assess_evaluationQueryInput!): [course_assesseval]
  assessIsEval(data: assesIsEvalQueryInput!): Boolean
  assign_evaluation(data: assign_evaluationQueryInput!): [course_assigneval]
  assignIsEval(data: assignIsEvalQueryInput!): Boolean
  session_assignments(data: sessionQueryInput!): [Int]
  assignment(data: assignmentQueryInput!): [course_assignment]
  studentAttendance(data: studentAttendanceQueryInput): [StudentAttendance!]!
  studentCourseCAComp(data: studentCourseCACompQueryInput!): [StudentCourseCAComp!]!
  studentCourseEvaluation(data: studentCourseEvaluationQueryInput!): StudentCourseEvaluation
  studentCourseInternalcalc(data: studentCourseInternalcalcQueryInput!): StudentCourseInternalcalc
  courseList(data: courseListQueryInput!): CourseList!
  studentSessions(data: studentSessions): [StudentSessions]
  courseRegisteredStudent(data: courseRegisteredStudentQueryInput!): [CourseRegisteredStudent!]!
  allPersons: [Person!]!
  person: Person!
  personReference(data: Person_Reference_Input): [Person_Reference_Table]
  staffAlloted(data: staffAllotedQueryInput): StaffAlloted!
  allStudents: [Student!]!
  student: Student!
  studentAwards(data: studentAwardsQueryInput!): [StudentAward!]!
  studentAward(data: studentAwardQueryInput!): StudentAward!
  studentEndsemsMarks(data: studentEndsemsMarksQueryInput!): [StudentEndsemMark!]!
  studentEndsemMarks(data: studentEndsemMarksQueryInput!): [StudentEndsemMark!]!
  studentEndsemMark(data: studentEndsemMarkQueryInput!): StudentEndsemMark!
  studentEventsParticipated(data: studentEventsParticipatedQueryInput!): [StudentEventParticipated!]!
  studentEventParticipated(data: studentEventParticipatedQueryInput!): StudentEventParticipated!
  studentFamilyDetails(data: studentFamilyDetailsQueryInput): StudentFamilyDetails!
  studentGpas(data: studentGpasQueryInput!): [StudentGpa!]!
  studentGpa(data: studentGpaQueryInput!): StudentGpa!
  studentHigherStudy(data: studentHigherStudyQueryInput!): StudentHigherStudy!
  studentHigherStudies(data: studentHigherStudiesQueryInput!): [StudentHigherStudy!]!
  studentInternships(data: studentInternshipsQueryInput!): [StudentInternship!]!
  studentInternship(data: studentInternshipQueryInput!): StudentInternship!
  studentPlacement(data: studentPlacementQueryInput!): StudentPlacement!
  studentPlacements(data: studentPlacementsQueryInput!): [StudentPlacement!]!
  studentRegisteredCourses(data: studentRegisteredCoursesQueryInput): [StudentRegisteredCourses!]!
  student_auth_login(data: user_infoQueryInput!): studentLoginPayload!
}

type Mutation {
  createAssessment(data: custom_type!): [course_assessment]
  createAssess_evaluation(data: assess_evaluationInput!): [course_assesseval]
  updateAssess_evaluation(data: assess_evaluationInput!): [course_assesseval]
  createAssign_evaluation(data: assign_evaluationInput!): [course_assigneval]
  updateAssign_evaluation(data: assign_evaluationInput!): [course_assigneval]
  createAssignment(data: custom_assignment_type!): [course_assignment]
  createPerson(data: createPersonInput!): Person!
  updatePerson(data: updatePersonInput!): Person!
  createStudent(data: createStudentInput!): Student!
  updateStudent(data: updateStudentInput!): Student!
  uploadPhoto(file: Upload): String!
  deletePhoto: String!
  createStudentAward(data: createStudentAwardInput!): StudentAward!
  updateStudentAward(data: updateStudentAwardInput!): StudentAward!
  deleteStudentAward(data: deleteStudentAwardInput!): StudentAward!
  createStudentEndsemMark(data: createStudentEndsemMarkInput!): StudentEndsemMark!
  updateStudentEndsemMark(data: [updateStudentEndsemMarkInput!]!): [StudentEndsemMark!]!
  deleteStudentEndsemMark(data: deleteStudentEndsemMarkInput!): StudentEndsemMark!
  createEventParticipated(data: createEventParticipatedInput!): StudentEventParticipated!
  updateEventParticipated(data: updateEventParticipatedInput!): StudentEventParticipated!
  deleteEventParticipated(data: deleteEventParticipatedInput!): StudentEventParticipated!
  createStudentFamilyDetails(data: createStudentFamilyDetailsInput!): StudentFamilyDetails!
  updateStudentFamilyDetails(data: updateStudentFamilyDetailsInput!): StudentFamilyDetails!
  createStudentGpa(data: createStudentGpaInput!): StudentGpa!
  updateStudentGpa(data: updateStudentGpaInput!): StudentGpa!
  deleteStudentGpa(data: deleteStudentGpaInput!): StudentGpa!
  createStudentHigherStudy(data: createStudentHigherStudyInput!): StudentHigherStudy!
  updateStudentHigherStudy(data: updateStudentHigherStudyInput!): StudentHigherStudy!
  deleteStudentHigherStudy(data: deleteStudentHigherStudyInput!): StudentHigherStudy!
  createStudentInternship(data: createStudentInternshipInput!): StudentInternship!
  updateStudentInternship(data: updateStudentInternshipInput!): StudentInternship!
  deleteStudentInternship(data: deleteStudentInternshipInput!): StudentInternship!
  createStudentPlacement(data: createStudentPlacementInput!): StudentPlacement!
  updateStudentPlacement(data: updateStudentPlacementInput!): StudentPlacement!
  deleteStudentPlacement(data: deleteStudentPlacementInput!): StudentPlacement!
  auth_createUser(data: createUser_infoInput!): user_infoPayload
  auth_updateUser(data: updateUser_infoInput!): user_infoPayload
}

type course_assessment {
  cassess_id: Int!
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assess_num: Int!
  question_num: String!
  question_stmt: String
  question_img: String
  blooms_level: Int!
  co_num: Int!
  marks: Int!
  entry_date: String!
  section: String!
}

input custom_type {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assess_num: Int!
  entry_date: String!
  section: [section]
}

input section {
  name: String
  section_mark: Int
  q_num: Int
  type: String
  questions: [questions]
}

input questions {
  question_num: String!
  question_stmt: String
  question_img: String
  blooms_level: Int!
  co_num: Int!
  marks: Int!
}

input assesmentQueryInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assess_num: Int!
}

input sessionQueryInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
}

type course_assesseval {
  cassesseval_id: Int!
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assess_num: Int!
  question_num: String!
  reg_no: Int!
  mark: Float!
}

input assess_evaluationQueryInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assess_num: Int!
  reg_no: Int!
}

input assess_evaluationInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assess_num: Int!
  reg_no: Int!
  questions: [question]
}

input question {
  question_num: String!
  mark: Float!
}

input assesIsEvalQueryInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assess_num: Int!
  reg_no: Int!
}

type course_assigneval {
  cassigneval_id: Int!
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assign_num: Int!
  question_num: String!
  reg_no: Int!
  mark: Float!
}

input assign_evaluationQueryInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assign_num: Int!
  reg_no: Int!
}

input assign_evaluationInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assign_num: Int!
  reg_no: Int!
  questions: [assign_question]
}

input assign_question {
  question_num: Int!
  mark: Float!
}

input assignIsEvalQueryInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assign_num: Int!
  reg_no: Int!
}

type course_assignment {
  cassign_id: Int!
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  entry_date: String!
  assign_num: Int!
  question_num: String!
  question_stmt: String
  question_img: String
  co_num: Int!
  marks: Int!
  deadline: String!
}

input custom_assignment_type {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  entry_date: String!
  assign_num: Int!
  deadline: String!
  questions: [assign_questions]
}

input assign_questions {
  question_num: String!
  question_stmt: String
  question_img: String
  co_num: Int!
  marks: Int!
}

input assignmentQueryInput {
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  assign_num: Int!
}

input studentAttendanceQueryInput {
  reg_no: Int!
  course_code: String!
  group_ref: Int!
  session_ref: Int!
}

type StudentAttendance {
  cattend_id: Int
  course_code: String
  group_ref: Int
  session_ref: Int
  reg_no: Int
  date: String
  period: Int
  presence: String
}

input studentCourseCACompQueryInput {
  reg_no: Int!
  course_code: String!
  group_ref: Int!
  session_ref: Int!
}

type StudentCourseCAComp {
  ccacomp_id: Int
  course_code: String
  group_ref: Int
  session_ref: Int
  type: Int
  number: Int
  weightage: Int
  marks_obtained: Int
  total_mark: Int
  weighted_mark: Float
}

input studentCourseEvaluationQueryInput {
  reg_no: Int!
  course_code: String!
  group_ref: Int!
  session_ref: Int!
  type: Int!
  number: Int!
}

type StudentCourseEvaluation {
  ceval_id: Int
  course_code: String
  group_ref: Int
  session_ref: Int
  type: Int
  total_mark: Int
  marks_obtained: Int
  reg_no: Int
  number: Int
  weighted_mark: Float
}

input studentCourseInternalcalcQueryInput {
  reg_no: Int!
  course_code: String!
  group_ref: Int!
  session_ref: Int!
}

type StudentCourseInternalcalc {
  cintcalc_id: Int
  course_code: String
  group_ref: Int
  session_ref: Int
  reg_no: Int
  ca: Float
  midterm: Float
  total_marks: Float
}

type CourseList {
  course_code: String!
  stream: Int
  regulation: Int
  semester: Int
  title: String
  credit: Int
  objectives: String
}

input courseListQueryInput {
  course_code: String!
}

type CourseRegisteredStudent {
  cregst_id: Int!
  course_code: String
  reg_no: Int
  semester: Int
  group_ref: Int
  session_ref: Int
}

input studentSessions {
  reg_no: Int!
}

input courseRegisteredStudentQueryInput {
  reg_no: Int!
  session_ref: Int
}

type StudentSessions {
  Reference_ID: Int
  Category: String
  Ref_Name: String
  Description: String
}

type Person {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

input personInput {
  Person_ID: Int!
}

input createPersonInput {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

input updatePersonInput {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

type Person_Reference_Table {
  Reference_ID: Int!
  Category: String
  Ref_Name: String
  Description: String
}

input Person_Reference_Input {
  Reference_ID: Int
  Category: String
}

type StaffAlloted {
  sallot_id: Int
  staff_id: Int
  class_room: String
  student_count: Int
  person: Person
}

input staffAllotedQueryInput {
  course_code: String
  group_ref: Int
  session_ref: Int
  sallot_id: Int
}

type Student {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Photo: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input studentInput {
  Register_No: Int!
}

input createStudentInput {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input updateStudentInput {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input studentAwardsQueryInput {
  Register_No: Int!
}

input studentAwardQueryInput {
  Award_ID: Int!
}

type StudentAward {
  Award_ID: Int!
  Register_No: Int!
  Award_Name: String
  Organizer_Name: String
  Award_Type_Ref: Int
  Award_Category_Ref: Int
  Place_of_Event: String
  Certificate_Copy: String
  Award_Date: String
}

input createStudentAwardInput {
  Award_Name: String
  Organizer_Name: String
  Award_Type_Ref: Int
  Award_Category_Ref: Int
  Place_of_Event: String
  Certificate_Copy: String
  Award_Date: String
  file: Upload
}

input updateStudentAwardInput {
  Award_ID: Int!
  Award_Name: String
  Organizer_Name: String
  Award_Type_Ref: Int
  Award_Category_Ref: Int
  Place_of_Event: String
  Certificate_Copy: String
  Award_Date: String
  file: Upload
}

input deleteStudentAwardInput {
  Award_ID: Int!
}

input studentEndsemsMarksQueryInput {
  Register_No: Int!
}

input studentEndsemMarksQueryInput {
  Register_No: Int!
  Semester: Int!
}

input studentEndsemMarkQueryInput {
  Mark_ID: Int!
}

type StudentEndsemMark {
  Mark_ID: Int!
  Register_No: Int!
  Semester: Int
  Course_Code: String
  Session_Ref: Int
  Grade: String
  Credits: Int
  Entry_Date: String
  course_list: CourseList
}

input createStudentEndsemMarkInput {
  Semester: Int
  Course_Code: String
  Session_Ref: Int
  Grade: String
  Credits: Int
  Entry_Date: String
}

input updateStudentEndsemMarkInput {
  Mark_ID: Int!
  Semester: Int
  Course_Code: String
  Session_Ref: Int
  Grade: String
  Credits: Int
  Entry_Date: String
}

input deleteStudentEndsemMarkInput {
  Mark_ID: Int!
}

input studentEventsParticipatedQueryInput {
  Register_No: Int!
}

input studentEventParticipatedQueryInput {
  Event_ID: Int!
}

type StudentEventParticipated {
  Event_ID: Int!
  Register_No: Int!
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
}

input createEventParticipatedInput {
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
  file: Upload
}

input updateEventParticipatedInput {
  Event_ID: Int!
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
  file: Upload
}

input deleteEventParticipatedInput {
  Event_ID: Int!
}

type StudentFamilyDetails {
  Family_ID: Int!
  Register_No: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

input studentFamilyDetailsQueryInput {
  Register_No: Int!
}

input createStudentFamilyDetailsInput {
  Register_No: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

input updateStudentFamilyDetailsInput {
  Family_ID: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

input studentGpasQueryInput {
  Register_No: Int!
}

input studentGpaQueryInput {
  Gpa_ID: Int!
}

type StudentGpa {
  Gpa_ID: Int!
  Register_No: Int!
  Semester: Int
  GPA: Float
  Grade_Sheet: String
}

input createStudentGpaInput {
  Semester: Int
  GPA: Float
  Grade_Sheet: String
  file: Upload
}

input updateStudentGpaInput {
  Gpa_ID: Int!
  Semester: Int
  GPA: Float
  Grade_Sheet: String
  file: Upload
}

input deleteStudentGpaInput {
  Gpa_ID: Int!
}

type StudentHigherStudy {
  HigherStudies_ID: Int!
  Register_No: Int!
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
}

input studentHigherStudyQueryInput {
  HigherStudies_ID: Int!
}

input studentHigherStudiesQueryInput {
  Register_No: Int!
}

input createStudentHigherStudyInput {
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
  file: Upload
}

input updateStudentHigherStudyInput {
  HigherStudies_ID: Int!
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
  file: Upload
}

input deleteStudentHigherStudyInput {
  HigherStudies_ID: Int!
}

type StudentInternship {
  Internship_ID: Int!
  Register_No: Int!
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
}

input studentInternshipsQueryInput {
  Register_No: Int!
}

input studentInternshipQueryInput {
  Internship_ID: Int!
}

input createStudentInternshipInput {
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
  file: Upload
}

input updateStudentInternshipInput {
  Internship_ID: Int!
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
  file: Upload
}

input deleteStudentInternshipInput {
  Internship_ID: Int!
}

type StudentPlacement {
  Placement_ID: Int!
  Register_No: Int!
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
}

input studentPlacementQueryInput {
  Placement_ID: Int!
}

input studentPlacementsQueryInput {
  Register_No: Int!
}

input createStudentPlacementInput {
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
  file: Upload
}

input updateStudentPlacementInput {
  Placement_ID: Int!
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
  file: Upload
}

input deleteStudentPlacementInput {
  Placement_ID: Int!
}

type StudentRegisteredCourses {
  cregst_id: Int!
  course_code: String
  reg_no: Int
  semester: Int
  group_ref: Int
  session_ref: Int
  course_list: CourseList
}

input studentRegisteredCoursesQueryInput {
  reg_no: Int!
  session_ref: Int
  cregst_id: Int
}

type studentLoginPayload {
  token: String!
  Register_No: Int!
  user_role: Int
}

type user_info {
  user_ID: Int!
  username: Int!
  user_role: Int
  password: String
  status: String
  create_time: String
}

input createUser_infoInput {
  username: Int!
  password: String!
  user_role: Int
  status: String
}

type user_infoPayload {
  user_ID: Int
  username: Int!
  user_role: Int
  status: String
}

input updateUser_infoInput {
  username: Int
  password: String
  user_role: Int
  status: String
}

input user_infoQueryInput {
  username: Int!
  password: String!
}

schema {
  query: Query
  mutation: Mutation
}
