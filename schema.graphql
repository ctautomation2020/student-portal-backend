type Query {
  login(data: credentialQueryInput!): loginPayload!
  allPersons: [Person!]!
  person: Person!
  personReference(data: Person_Reference_Input): [Person_Reference_Table]
  allStudents: [Student!]!
  student: Student!
  studentEventsParticipated(data: studentEventsParticipatedQueryInput!): [StudentEventParticipated!]!
  studentEventParticipated(data: studentEventParticipatedQueryInput!): StudentEventParticipated!
  studentFamilyDetails(data: studentFamilyDetailsQueryInput): StudentFamilyDetails!
  studentHigherStudies(data: studentHigherStudiesQueryInput!): StudentHigherStudies!
  studentInternships(data: studentInternshipsQueryInput!): [StudentInternship!]!
  studentInternship(data: studentInternshipQueryInput!): StudentInternship!
  studentPlacement(data: studentPlacementQueryInput!): StudentPlacement!
}

type Mutation {
  createUser(data: createCredentialsInput!): credentialPayload
  updateUser(data: updateCredentialsInput!): credentialPayload
  createPerson(data: createPersonInput!): Person!
  updatePerson(data: updatePersonInput!): Person!
  createStudent(data: createStudentInput!): Student!
  updateStudent(data: updateStudentInput!): Student!
  uploadPhoto(file: Upload): Boolean
  createEventParticipated(data: createEventParticipatedInput!): StudentEventParticipated!
  updateEventParticipated(data: updateEventParticipatedInput!): StudentEventParticipated!
  deleteEventParticipated(data: deleteEventParticipatedInput!): StudentEventParticipated!
  createStudentFamilyDetails(data: createStudentFamilyDetailsInput!): StudentFamilyDetails!
  updateStudentFamilyDetails(data: updateStudentFamilyDetailsInput!): StudentFamilyDetails!
  createStudentHigherStudies(data: createStudentHigherStudiesInput!): StudentHigherStudies!
  updateStudentHigherStudies(data: updateStudentHigherStudiesInput!): StudentHigherStudies!
  createStudentInternship(data: createStudentInternshipInput!): StudentInternship!
  updateStudentInternship(data: updateStudentInternshipInput!): StudentInternship!
  deleteStudentInternship(data: deleteStudentInternshipInput!): StudentInternship!
  createStudentPlacement(data: createStudentPlacementInput!): StudentPlacement!
  updateStudentPlacement(data: updateStudentPlacementInput!): StudentPlacement!
}

type credentials {
  Credentials_ID: Int
  Register_No: Int!
  Username: String!
  Password: String!
  student: Student!
}

input createCredentialsInput {
  Register_No: Int!
  Username: String!
  Password: String!
}

type credentialPayload {
  Credentials_ID: Int
  Register_No: Int!
  Username: String!
}

input updateCredentialsInput {
  Register_No: Int!
  Username: String
  Password: String
}

input credentialQueryInput {
  Username: String!
  Password: String!
}

type loginPayload {
  token: String!
  Register_No: String!
}

type Person {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

input personInput {
  Person_ID: Int!
}

input createPersonInput {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

input updatePersonInput {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

type Person_Reference_Table {
  Reference_ID: Int!
  Ref_Code: Int
  Category: String
  Ref_Name: String
  Description: String
}

input Person_Reference_Input {
  Reference_ID: Int
  Category: String
}

type Student {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input studentInput {
  Register_No: Int!
}

input createStudentInput {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input updateStudentInput {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input studentEventsParticipatedQueryInput {
  Register_No: Int!
}

input studentEventParticipatedQueryInput {
  Event_ID: Int!
}

type StudentEventParticipated {
  Event_ID: Int!
  Register_No: Int!
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
}

input createEventParticipatedInput {
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
}

input updateEventParticipatedInput {
  Event_ID: Int!
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
}

input deleteEventParticipatedInput {
  Event_ID: Int!
}

type StudentFamilyDetails {
  Family_ID: Int!
  Register_No: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

input studentFamilyDetailsQueryInput {
  Register_No: Int!
}

input createStudentFamilyDetailsInput {
  Register_No: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

input updateStudentFamilyDetailsInput {
  Family_ID: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

type StudentHigherStudies {
  HigherStudies_ID: Int!
  Register_No: Int!
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
}

input studentHigherStudiesQueryInput {
  Register_No: Int!
}

input createStudentHigherStudiesInput {
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
}

input updateStudentHigherStudiesInput {
  HigherStudies_ID: Int!
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
}

type StudentInternship {
  Internship_ID: Int!
  Register_No: Int!
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
}

input studentInternshipsQueryInput {
  Register_No: Int!
}

input studentInternshipQueryInput {
  Internship_ID: Int!
}

input createStudentInternshipInput {
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
}

input updateStudentInternshipInput {
  Internship_ID: Int!
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
}

input deleteStudentInternshipInput {
  Internship_ID: Int!
}

type StudentPlacement {
  Placement_ID: Int!
  Register_No: Int!
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
}

input studentPlacementQueryInput {
  Register_No: Int!
}

input createStudentPlacementInput {
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
}

input updateStudentPlacementInput {
  Placement_ID: Int!
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
}

schema {
  query: Query
  mutation: Mutation
}
