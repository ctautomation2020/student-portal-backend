type Query {
  courseList(data: courseListQueryInput!): CourseList!
  courseRegisteredStudent(data: courseRegisteredStudentQueryInput!): [CourseRegisteredStudent!]!
  login(data: credentialQueryInput!): loginPayload!
  allPersons: [Person!]!
  person: Person!
  personReference(data: Person_Reference_Input): [Person_Reference_Table]
  allStudents: [Student!]!
  student: Student!
  studentAwards(data: studentAwardsQueryInput!): [StudentAward!]!
  studentAward(data: studentAwardQueryInput!): StudentAward!
  studentCourses(data: studentCoursesQueryInput!): [StudentCourse!]!
  studentCourse(data: studentCourseQueryInput!): StudentCourse!
  studentEndsemsMarks(data: studentEndsemsMarksQueryInput!): [StudentEndsemMark!]!
  studentEndsemMarks(data: studentEndsemMarksQueryInput!): [StudentEndsemMark!]!
  studentEndsemMark(data: studentEndsemMarkQueryInput!): StudentEndsemMark!
  studentEventsParticipated(data: studentEventsParticipatedQueryInput!): [StudentEventParticipated!]!
  studentEventParticipated(data: studentEventParticipatedQueryInput!): StudentEventParticipated!
  studentFamilyDetails(data: studentFamilyDetailsQueryInput): StudentFamilyDetails!
  studentGpas(data: studentGpasQueryInput!): [StudentGpa!]!
  studentGpa(data: studentGpaQueryInput!): StudentGpa!
  studentHigherStudy(data: studentHigherStudyQueryInput!): StudentHigherStudy!
  studentHigherStudies(data: studentHigherStudiesQueryInput!): [StudentHigherStudy!]!
  studentInternalMarks(data: studentInternalMarksQueryInput!): [StudentInternalMark!]!
  studentInternalMark(data: studentInternalMarkQueryInput!): StudentInternalMark!
  studentInternships(data: studentInternshipsQueryInput!): [StudentInternship!]!
  studentInternship(data: studentInternshipQueryInput!): StudentInternship!
  studentPlacement(data: studentPlacementQueryInput!): StudentPlacement!
  studentPlacements(data: studentPlacementsQueryInput!): [StudentPlacement!]!
  studentRegisteredCourses(data: studentRegisteredCoursesQueryInput): [StudentRegisteredCourses!]!
  studentTcourse(data: studentTcourseQueryInput!): StudentTcourse!
}

type CourseList {
  course_code: String!
  stream: Int
  regulation: Int
  semester: Int
  title: String
  credit: Int
  objectives: String
}

input courseListQueryInput {
  course_code: String!
}

type CourseRegisteredStudent {
  cregst_id: Int!
  course_code: String
  reg_no: Int
  semester: Int
  group_ref: Int
  session_ref: Int
}

input courseRegisteredStudentQueryInput {
  reg_no: Int!
}

type Mutation {
  createUser(data: createCredentialsInput!): credentialPayload
  updateUser(data: updateCredentialsInput!): credentialPayload
  createPerson(data: createPersonInput!): Person!
  updatePerson(data: updatePersonInput!): Person!
  createStudent(data: createStudentInput!): Student!
  updateStudent(data: updateStudentInput!): Student!
  uploadPhoto(file: Upload): String!
  deletePhoto: String!
  createStudentAward(data: createStudentAwardInput!): StudentAward!
  updateStudentAward(data: updateStudentAwardInput!): StudentAward!
  deleteStudentAward(data: deleteStudentAwardInput!): StudentAward!
  uploadStudentAward(data: uploadStudentAwardInput!): String!
  createStudentCourse(data: createStudentCourseInput!): StudentCourse!
  updateStudentCourse(data: updateStudentCourseInput!): StudentCourse!
  deleteStudentCourse(data: deleteStudentCourseInput!): StudentCourse!
  createStudentEndsemMark(data: createStudentEndsemMarkInput!): StudentEndsemMark!
  updateStudentEndsemMark(data: [updateStudentEndsemMarkInput!]!): [StudentEndsemMark!]!
  deleteStudentEndsemMark(data: deleteStudentEndsemMarkInput!): StudentEndsemMark!
  createEventParticipated(data: createEventParticipatedInput!): StudentEventParticipated!
  updateEventParticipated(data: updateEventParticipatedInput!): StudentEventParticipated!
  deleteEventParticipated(data: deleteEventParticipatedInput!): StudentEventParticipated!
  uploadEventParticipated(data: uploadEventParticipatedInput!): String!
  createStudentFamilyDetails(data: createStudentFamilyDetailsInput!): StudentFamilyDetails!
  updateStudentFamilyDetails(data: updateStudentFamilyDetailsInput!): StudentFamilyDetails!
  createStudentGpa(data: createStudentGpaInput!): StudentGpa!
  updateStudentGpa(data: updateStudentGpaInput!): StudentGpa!
  deleteStudentGpa(data: deleteStudentGpaInput!): StudentGpa!
  uploadStudentGpa(data: uploadStudentGpaInput!): String!
  createStudentHigherStudy(data: createStudentHigherStudyInput!): StudentHigherStudy!
  updateStudentHigherStudy(data: updateStudentHigherStudyInput!): StudentHigherStudy!
  deleteStudentHigherStudy(data: deleteStudentHigherStudyInput!): StudentHigherStudy!
  uploadStudentHigherStudy(data: uploadStudentHigherStudyInput!): String!
  createStudentInternalMark(data: createStudentInternalMarkInput!): StudentInternalMark!
  updateStudentInternalMark(data: updateStudentInternalMarkInput!): StudentInternalMark!
  deleteStudentInternalMark(data: deleteStudentInternalMarkInput!): StudentInternalMark!
  createStudentInternship(data: createStudentInternshipInput!): StudentInternship!
  updateStudentInternship(data: updateStudentInternshipInput!): StudentInternship!
  deleteStudentInternship(data: deleteStudentInternshipInput!): StudentInternship!
  uploadStudentInternship(data: uploadStudentInternshipInput!): String!
  createStudentPlacement(data: createStudentPlacementInput!): StudentPlacement!
  updateStudentPlacement(data: updateStudentPlacementInput!): StudentPlacement!
  deleteStudentPlacement(data: deleteStudentPlacementInput!): StudentPlacement!
  uploadStudentPlacement(data: uploadStudentPlacementInput!): String!
}

type credentials {
  Credentials_ID: Int
  Register_No: Int!
  Username: String!
  Password: String!
  student: Student!
}

input createCredentialsInput {
  Register_No: Int!
  Username: String!
  Password: String!
}

type credentialPayload {
  Credentials_ID: Int
  Register_No: Int!
  Username: String!
}

input updateCredentialsInput {
  Register_No: Int!
  Username: String
  Password: String
}

input credentialQueryInput {
  Username: String!
  Password: String!
}

type loginPayload {
  token: String!
  Register_No: String!
}

type Person {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

input personInput {
  Person_ID: Int!
}

input createPersonInput {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

input updatePersonInput {
  Person_ID: Int!
  Prefix_Ref: Int
  First_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  Primary_MailID: String
  Secondary_MailID: String
  Aadhar_Card: String
  PAN_Card: String
  Passport_Number: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Intercom_Number: String
  Alias_Name: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Marital_Status_Ref: Int
  Room_Num: String
}

type Person_Reference_Table {
  Reference_ID: Int!
  Ref_Code: Int
  Category: String
  Ref_Name: String
  Description: String
}

input Person_Reference_Input {
  Reference_ID: Int
  Category: String
}

type Student {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Photo: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input studentInput {
  Register_No: Int!
}

input createStudentInput {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input updateStudentInput {
  Register_No: Int!
  First_Name: String
  Middle_Name: String
  Last_Name: String
  Gender_Ref: Int
  DOB: String
  Community_Ref: Int
  Caste: String
  MailID: String
  Aadhar_Card: String
  Primary_ContactNumber: String
  Secondary_ContactNumber: String
  Address_Line1: String
  Address_Line2: String
  Address_Line3: String
  Address_Line4: String
  Correspondence_Address: String
  Residential_Type_Ref: Int
  FA: Int
  Programme_Ref: Int
  Branch_Ref: Int
  Registration_Mode_Ref: Int
  Blood_Group_Ref: Int
  GATE_Cutoff_Mark: Float
  Admission_Date: String
  Admission_Category_Ref: Int
  Scholarship_Received_Ref: Int
  Scholarship_Details: String
  NSS_NSO_YRC_Volunteer_Ref: Int
  Hostel_Block_Room: String
}

input studentAwardsQueryInput {
  Register_No: Int!
}

input studentAwardQueryInput {
  Award_ID: Int!
}

type StudentAward {
  Award_ID: Int!
  Register_No: Int!
  Award_Name: String
  Organizer_Name: String
  Award_Type_Ref: Int
  Award_Category_Ref: Int
  Place_of_Event: String
  Certificate_Copy: String
  Award_Date: String
}

input createStudentAwardInput {
  Award_Name: String
  Organizer_Name: String
  Award_Type_Ref: Int
  Award_Category_Ref: Int
  Place_of_Event: String
  Certificate_Copy: String
  Award_Date: String
}

input updateStudentAwardInput {
  Award_ID: Int!
  Award_Name: String
  Organizer_Name: String
  Award_Type_Ref: Int
  Award_Category_Ref: Int
  Place_of_Event: String
  Certificate_Copy: String
  Award_Date: String
}

input deleteStudentAwardInput {
  Award_ID: Int!
}

input uploadStudentAwardInput {
  Award_ID: Int!
  file: Upload!
}

input studentCoursesQueryInput {
  Register_No: Int!
}

input studentCourseQueryInput {
  Academic_ID: Int!
}

type StudentCourse {
  Academic_ID: Int!
  Register_No: Int!
  Course_Code: String
  Staff_ID: Int
  Session_Ref: Int
  Semester_Ref: Int
  Group_Ref: Int
  Class_Type_Ref: Int
}

input createStudentCourseInput {
  Course_Code: String
  Staff_ID: Int
  Session_Ref: Int
  Semester_Ref: Int
  Group_Ref: Int
  Class_Type_Ref: Int
}

input updateStudentCourseInput {
  Academic_ID: Int!
  Course_Code: String
  Staff_ID: Int
  Session_Ref: Int
  Semester_Ref: Int
  Group_Ref: Int
  Class_Type_Ref: Int
}

input deleteStudentCourseInput {
  Academic_ID: Int!
}

input studentEndsemsMarksQueryInput {
  Register_No: Int!
}

input studentEndsemMarksQueryInput {
  Register_No: Int!
  Semester: Int!
}

input studentEndsemMarkQueryInput {
  Mark_ID: Int!
}

type StudentEndsemMark {
  Mark_ID: Int!
  Register_No: Int!
  Semester: Int
  Course_Code: String
  Session_Ref: Int
  Grade: String
  Credits: Int
  Entry_Date: String
}

input createStudentEndsemMarkInput {
  Semester: Int
  Course_Code: String
  Session_Ref: Int
  Grade: String
  Credits: Int
  Entry_Date: String
}

input updateStudentEndsemMarkInput {
  Mark_ID: Int!
  Semester: Int
  Course_Code: String
  Session_Ref: Int
  Grade: String
  Credits: Int
  Entry_Date: String
}

input deleteStudentEndsemMarkInput {
  Mark_ID: Int!
}

input studentEventsParticipatedQueryInput {
  Register_No: Int!
}

input studentEventParticipatedQueryInput {
  Event_ID: Int!
}

type StudentEventParticipated {
  Event_ID: Int!
  Register_No: Int!
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
}

input createEventParticipatedInput {
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
}

input updateEventParticipatedInput {
  Event_ID: Int!
  Event_Name: String
  Event_Type_Ref: Int
  Participation_Type_Ref: Int
  Team_Size: Int
  Event_Organizer: String
  Event_Date: String
  Prize_Won_Details: String
  Certificate_Copy: String
}

input deleteEventParticipatedInput {
  Event_ID: Int!
}

input uploadEventParticipatedInput {
  Event_ID: Int!
  file: Upload!
}

type StudentFamilyDetails {
  Family_ID: Int!
  Register_No: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

input studentFamilyDetailsQueryInput {
  Register_No: Int!
}

input createStudentFamilyDetailsInput {
  Register_No: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

input updateStudentFamilyDetailsInput {
  Family_ID: Int!
  Father_Name: String
  Mother_Name: String
  Father_ContactNumber: String
  Mother_ContactNumber: String
  Father_MailID: String
  Mother_MailID: String
  Father_Occupation: String
  Mother_Occupation: String
  Father_Affilation: String
  Mother_Affilation: String
  Father_Company: String
  Mother_Company: String
  Parents_Annual_Income: Int
  Local_Guardian_Name: String
  Local_Guardian_Address: String
  Local_Guardian_Contact_Number: String
}

input studentGpasQueryInput {
  Register_No: Int!
}

input studentGpaQueryInput {
  Gpa_ID: Int!
}

type StudentGpa {
  Gpa_ID: Int!
  Register_No: Int!
  Semester: Int
  GPA: Float
  Grade_Sheet: String
}

input createStudentGpaInput {
  Semester: Int
  GPA: Float
  Grade_Sheet: String
}

input updateStudentGpaInput {
  Gpa_ID: Int!
  Semester: Int
  GPA: Float
  Grade_Sheet: String
}

input deleteStudentGpaInput {
  Gpa_ID: Int!
}

input uploadStudentGpaInput {
  Gpa_ID: Int!
  file: Upload!
}

type StudentHigherStudy {
  HigherStudies_ID: Int!
  Register_No: Int!
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
}

input studentHigherStudyQueryInput {
  HigherStudies_ID: Int!
}

input studentHigherStudiesQueryInput {
  Register_No: Int!
}

input createStudentHigherStudyInput {
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
}

input updateStudentHigherStudyInput {
  HigherStudies_ID: Int!
  University: String
  Degree: String
  Specialization: String
  Admission_Mode_Ref: Int
  Score: Float
  Country: String
  Location: String
  LOR_Details: String
  Score_Card_Copy: String
}

input deleteStudentHigherStudyInput {
  HigherStudies_ID: Int!
}

input uploadStudentHigherStudyInput {
  HigherStudies_ID: Int!
  file: Upload!
}

input studentInternalMarksQueryInput {
  Register_No: Int!
}

input studentInternalMarkQueryInput {
  InternalMark_ID: Int!
}

type StudentInternalMark {
  InternalMark_ID: Int!
  Register_No: Int!
  Course_Code: String
  Session: String
  Staff_ID: Int
  Evaluation_Type_Ref: Int
  Max_Mark: Int
  Entry_Date: String
  Mark_Scored: Int
  Weightage: Float
  Total: Float
}

input createStudentInternalMarkInput {
  Course_Code: String
  Session: String
  Staff_ID: Int
  Evaluation_Type_Ref: Int
  Max_Mark: Int
  Entry_Date: String
  Mark_Scored: Int
  Weightage: Float
  Total: Float
}

input updateStudentInternalMarkInput {
  InternalMark_ID: Int!
  Course_Code: String
  Session: String
  Staff_ID: Int
  Evaluation_Type_Ref: Int
  Max_Mark: Int
  Entry_Date: String
  Mark_Scored: Int
  Weightage: Float
  Total: Float
}

input deleteStudentInternalMarkInput {
  InternalMark_ID: Int!
}

type StudentInternship {
  Internship_ID: Int!
  Register_No: Int!
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
}

input studentInternshipsQueryInput {
  Register_No: Int!
}

input studentInternshipQueryInput {
  Internship_ID: Int!
}

input createStudentInternshipInput {
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
}

input updateStudentInternshipInput {
  Internship_ID: Int!
  Company: String
  Title: String
  Order_Copy: String
  Address: String
  Start_Date: String
  End_Date: String
  Stiphend_Option_Ref: Int
  Stiphend_Amount: Float
  Selection_Mode_Ref: Int
}

input deleteStudentInternshipInput {
  Internship_ID: Int!
}

input uploadStudentInternshipInput {
  Internship_ID: Int!
  file: Upload!
}

type StudentPlacement {
  Placement_ID: Int!
  Register_No: Int!
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
}

input studentPlacementQueryInput {
  Placement_ID: Int!
}

input studentPlacementsQueryInput {
  Register_No: Int!
}

input createStudentPlacementInput {
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
}

input updateStudentPlacementInput {
  Placement_ID: Int!
  Company: String
  Package: Float
  Appointment_Order_Copy: String
  Location: String
  Designation: String
  Appointment_OrderNum: String
  Appointment_Letter_IssueDate: String
  Joining_Date: String
  Placement_Type_Ref: Int
}

input deleteStudentPlacementInput {
  Placement_ID: Int!
}

input uploadStudentPlacementInput {
  Placement_ID: Int!
  file: Upload!
}

type StudentRegisteredCourses {
  cregst_id: Int!
  course_code: String
  reg_no: Int
  semester: Int
  group_ref: Int
  session_ref: Int
  course_list: CourseList
}

input studentRegisteredCoursesQueryInput {
  Register_No: Int!
}

input studentTcourseQueryInput {
  Tcourse_ID: Int!
}

type StudentTcourse {
  Tcourse_ID: Int!
  Degree: String
  Semester: Int
  Code: String
  Title: String
  Credit: Int
}

schema {
  query: Query
  mutation: Mutation
}
